<?php
/**
 * @file
 * Code for the Studio Modals feature.
 */

include_once 'studio_modals.features.inc';



define('STUDIO_MODALS_CONTACT_WEBFORM_NID', 7);
define('STUDIO_MODALS_NEWSLETTER_WEBFORM_NID', 8);


/**
 * Implementation of hook_menu().
 */
function studio_modals_menu() {
  
  /*
  $items['studio-modals/%ctools_js/contact-form'] = array(
    'title' => t('Contact Us!'),
    'page callback' => '_studio_modals_form',
    'page arguments' => array(1, 2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  //*/
  $items['studio-modals/%ctools_js/newsletter-form'] = array(
    'title' => t('Sign Up for Our Newsletter'),
    'page callback' => '_studio_modals_newsletter_form',
    'page arguments' => array(1, 2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}


/**
 * Implementation of hook_block_view_menu_menu_eyebrow_menu_alter().
 */
function studio_modals_block_view_alter(&$data, $block) {
  
  if ($block->module == 'menu' && $block->delta == 'menu-eyebrow-menu') {
    
    ctools_include('modal');
    ctools_include('ajax');
    ctools_modal_add_js();
  
    foreach ($data['content'] as $key => &$child) {
      if (is_numeric($key) && strpos($child['#href'], 'newsletter') !== FALSE) {
        $child['#localized_options']['attributes']['class'][] = 'ctools-use-modal';
      }
    }
  }
}
 

/*
 * A modal user login callback.
 */
function _studio_modals_newsletter_form($js = NULL, $form_name = '') {
  
  // Determine the webform nid
  $webform_nid = NULL;
  switch ($form_name) {
    case 'contact-form':
      $webform_nid = STUDIO_MODALS_CONTACT_WEBFORM_NID;
      break;
    case 'newsletter-form':
      $webform_nid = STUDIO_MODALS_NEWSLETTER_WEBFORM_NID;
      break;
  }
  
  $webform_node = node_load($webform_nid);
  
  // Ensure we have the proper webform nid for this form.
  if (!is_object($webform_node) || $webform_node->type != 'webform') {
    echo t('Sorry, the newsletter form is unavailable.');
    exit;
  }
  
  _studio_modals_ajax_webform($js, $webform_node);
}


function _studio_modals_ajax_webform($js = NULL, $webform_node) {
  
  $webform_nid = $webform_node->nid;
  $submission = new stdClass();
    
  if (!$js) {
    return drupal_get_form('webform_client_form_'. $webform_nid, $webform_node, $submission);
  }

  ctools_include('modal');
  ctools_include('ajax');
  
  $form_state = array(
    'title' => $webform_node->title,
    'ajax' => TRUE,
  );

  // Fetch webform form stuff
  //$output = drupal_get_form('webform_client_form_'.$webform_nid, $webform_node, $submission);
  $args = array($webform_node, $submission);
  $form_state['build_info']['args'] = $args;
  
  $output = ctools_modal_form_wrapper('webform_client_form_'. $webform_nid, $form_state);
  
  #if (!empty($form_state['executed'])) {
  if (!empty($form_state['executed']) || (isset($_SESSION['webform_client_form_'. $webform_nid]) && $_SESSION['webform_client_form_'. $webform_nid] == 'submitted')) {
    unset($_SESSION['webform_client_form_'. $webform_nid]);
    $confirmation['#markup'] = '<div class="studio-modals-confirmation-wrapper">'. check_markup($webform_node->webform['confirmation']) .'</div>';
    // We'll just overwrite the form output if it was successful.
    $output = array();
    ctools_add_js('ajax-responder');
    if (isset($_GET['destination'])) {
      $output[] = ctools_ajax_command_redirect($_GET['destination']);
    }
    else {
      $output[] = ctools_modal_command_display('Confirmation', $confirmation);
      #$output[] = ctools_ajax_command_reload();
    }
  }
  print ajax_render($output);
  exit;
}